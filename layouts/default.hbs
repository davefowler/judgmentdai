<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{{ site.title }} - {{ title }}</title>
  <link rel="stylesheet" href="/css/style.css">
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;700&family=Inter:wght@300;400;600;700&display=swap" rel="stylesheet">
  <meta name="description" content="Judgment DAI - Addressing the existential risks of artificial general intelligence">
</head>
<body>

  <!-- Hero image container - absolute positioned behind everything -->
  <div class="hero-container">
    <img src="/assets/{{bg-image}}" alt="Hero image" class="hero-image">
    <div class="hero-gradient"></div>
  </div>

  <div id="page-container">
    <header>
      <div class="container">
        <div class="header-wrapper">
          <h1 class="logo"><a href="/">Judgment DAI</a></h1>
          <nav>
            <ul>
              <li><a href="/">Home</a></li>
              <li><a href="/after">After</a></li>
              <li><a href="/plan">Plan</a></li>
              <li><a href="/about">About</a></li>
            </ul>
          </nav>
        </div>
      </div>
    </header>

    <main class="container">
      {{{ contents }}}
    </main>

    <footer>
      <div class="container">
        <p>&copy; 2025 Judgment DAI. All rights reserved.</p>
        <p><small>The future of all life on Earth depends on the decisions we make today.</small></p>
      </div>
    </footer>
  </div>
  
  <script>
    // Add active class to current page in navigation
    document.addEventListener('DOMContentLoaded', function() {
      const currentLocation = window.location.pathname;
      const navLinks = document.querySelectorAll('nav ul li a');
      
      navLinks.forEach(link => {
        const linkPath = link.getAttribute('href');
        if ((currentLocation === '/' && linkPath === '/') || 
            (currentLocation !== '/' && currentLocation.includes(linkPath) && linkPath !== '/')) {
          link.classList.add('active');
        }
      });
      
      // Add a loaded class to trigger fade-in animation
      document.body.classList.add('bg-loaded');
    });

    // generate SVG stars procedurally
    const SVG_NS = "http://www.w3.org/2000/svg";
    const svg = document.getElementById("bg");
    const starGroup = document.getElementById("stars");
    const W = window.innerWidth, H = window.innerHeight;
    function setStarfieldSize() {
      // Get the greater of body and html scrollHeight (covers most edge cases)
      const W = Math.max(document.body.scrollWidth, document.documentElement.scrollWidth);
      const H = Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);
      svg.setAttribute("width", W);
      svg.setAttribute("height", H);
    }
    setStarfieldSize();

    // Update on resize and scroll (in case content grows)
    window.addEventListener('resize', setStarfieldSize);
    window.addEventListener('scroll', setStarfieldSize);

    for(let i=0; i<250; i++){
      const c = document.createElementNS(SVG_NS, "circle");
      const x = Math.random() * (W - 80) + 40;
      const y = Math.random() * (H - 80) + 40;
      const r = Math.random() * 1.5 + 0.4;
      c.setAttribute("cx", x);
      c.setAttribute("cy", y);
      c.setAttribute("r", r);
      c.setAttribute("opacity", Math.random() * 0.5 + 0.5);
      starGroup.appendChild(c);
    }
  </script>
</body>
</html>
